sudo ./mininet-wifi/examples/simplewifitopology_new.py

2663.11,3080.25

ap1

    ovs-vsctl set Bridge ap1 protocols=OpenFlow13
    ovs-vsctl set-manager ptcp:6632



c0

    ryu-manager ryu.app.rest_qos ryu.app.qos_simple_switch_13 ryu.app.rest_conf_switch



    curl -X PUT -d '"tcp:127.0.0.1:6632"' http://localhost:8080/v1.0/conf/switches/0000000000000010/ovsdb_addr

    curl -X POST -d '{"port_name": "ap1-wlan1", "type": "linux-htb", "max_rate": "7500000", "queues":[{"max_rate": "7500000"}, {"min_rate": "7500000"}]}' http://localhost:8080/qos/queue/0000000000000010

    curl -X POST -d '{"match": {"ip_dscp": "26"}, "actions":{"queue": "1"}}' http://localhost:8080/qos/rules/0000000000000010

    curl -X POST -d '{"match": {"ip_dscp": "34"}, "actions":{"queue": "2"}}' http://localhost:8080/qos/rules/0000000000000010




    ##############################3stop##########################


    curl -X POST -d '{"match": {"nw_dst": "10.0.0.230", "nw_proto": "UDP", "tp_dst": "5013"}, "actions":{"mark": "26"}}' http://localhost:8080/qos/rules/0000000000000001
    curl -X POST -d '{"match": {"nw_dst": "10.0.0.113", "nw_proto": "UDP", "tp_dst": "5013"}, "actions":{"mark": "26"}}' http://localhost:8080/qos/rules/0000000000000001

    curl -X POST -d '{"match": {"nw_dst": "10.0.0.220", "nw_proto": "UDP", "tp_dst": "5012"}, "actions":{"mark": "34"}}' http://localhost:8080/qos/rules/0000000000000001
    curl -X POST -d '{"match": {"nw_dst": "10.0.0.112", "nw_proto": "UDP", "tp_dst": "5012"}, "actions":{"mark": "34"}}' http://localhost:8080/qos/rules/0000000000000001


    curl -X GET http://localhost:8080/qos/rules/0000000000000001




h1 (1)

    iperf -s -u -p 5002 &

h1 (2)
    iperf -s -u -p 5002 &


sta2

    iperf -c 172.16.20.10 -p 5002 -u -b 10M

sta3

    iperf -c 172.16.20.10 -p 5003 -u -b 1M


    ovs-ofctl dump-flows ap1 -O Openflow13


    ovs-ofctl dump-flows ap1 -O Openflow13

    ovs-appctl ofproto/trace ap1 in_port=9,dl_src=00:00:00:00:00:00:19,dl_dst=00:00:00:00:00:00:09

    ovs-ofctl add-flow ap1  "table=0, priority=1, in_port=9, actions=output:1" -O Openflow13
    ovs-ofctl add-flow ap1  "table=0, priority=1, in_port=9, dl_src=00:00:00:00:00:19,dl_dst=00:00:00:00:00:09, actions=output:1" -O Openflow13
    ovs-ofctl add-flow ap1  "table=0, priority=1, in_port=1, dl_src=00:00:00:00:00:09,dl_dst=00:00:00:00:00:19, actions=output:9" -O Openflow13


    ovs-ofctl add-flow ap1  "table=0, priority=1, in_port=9, actions=output:1" -O Openflow13; ovs-ofctl add-flow ap1  "table=0, priority=1, in_port=9, dl_src=00:00:00:00:00:19,dl_dst=00:00:00:00:00:09, actions=output:1" -O Openflow13; ovs-ofctl add-flow ap1  "table=0, priority=1, in_port=1, dl_src=00:00:00:00:00:09,dl_dst=00:00:00:00:00:19, actions=output:9" -O Openflow13


    cat result.txt | grep ms | grep % | tr -s ' ' | cut -d '/' -f2 | cut -d' ' -f2 

    x=$(cat result.txt | grep 0.0-30 | grep % | cut -d'(' -f2 | cut -d'%' -f1 | paste -s -d+ | bc); y=$(cat result.txt | grep 0.0-30 | grep % | cut -d'(' -f2 | cut -d'%' -f1 | wc -l); z=$(echo $x/$y | bc -l); echo "perda média $z %"

    x=$(cat result.txt | grep 0.0-30 | grep ' ms' | tr -s ' ' | cut -d ' ' -f9 | paste -s -d+ | bc);y=$(cat result.txt | grep 0.0-30 | grep ' ms' | tr -s ' ' | cut -d ' ' -f9 | wc -l);z=$(echo $x/$y | bc -l); echo "delay médio $z ms"



================================================//=================================//===========================//===================


    =========//Inicia controlador//=========================
    ryu-manager ryu.app.rest_qos ryu.app.qos_simple_switch_13 ryu.app.rest_conf_switch ryu.app.ofctl_rest


    =============//Configura Bridges (Aps e Switches)//======================================
    ovs-vsctl set Bridge ap1 protocols=OpenFlow13; ovs-vsctl set Bridge s1 protocols=OpenFlow13; ovs-vsctl set Bridge s2 protocols=OpenFlow13;



    ovs-vsctl set-manager ptcp:6632; curl -X PUT -d '"tcp:127.0.0.1:6632"' http://localhost:8080/v1.0/conf/switches/0000000000000100/ovsdb_addr; curl -X PUT -d '"tcp:127.0.0.1:6632"' http://localhost:8080/v1.0/conf/switches/0000000000000010/ovsdb_addr; curl -X PUT -d '"tcp:127.0.0.1:6632"' http://localhost:8080/v1.0/conf/switches/0000000000000020/ovsdb_addr


    =======================//Aplica regra de Qos//=============================================
    curl -X POST -d '{"port_name": "ap1-eth2", "type": "linux-htb", "max_rate": "9000000", "queues": [{"max_rate": "7500000"}, {"min_rate": "7500000"}]}' http://localhost:8080/qos/queue/0000000000000100; curl -X POST -d '{"match": {"nw_dst": "10.0.0.13", "nw_proto": "UDP", "tp_dst": "5003"}, "actions":{"queue": "1"}}' http://localhost:8080/qos/rules/0000000000000100



    ========================//Limpa regras de QoS aplicadas//=============================================
    ovs-vsctl clear Port ap1-eth2 qos; ovs-vsctl --all destroy QoS; ovs-vsctl --all destroy Queue; curl -X DELETE -d '{"qos_id":"all"}' http://localhost:8080/qos/rules/0000000000000100



    iperf -s -u -i 1 -p 5002

    iperf -c 10.0.0.13 -p 5002 -u -b 1M -t5

    ovs-ofctl del-flows ap1; ovs-ofctl add-flow ap1 "table=0, priority=0, actions=goto_table:1" -O Openflow13; ovs-ofctl add-flow ap1 "table=1, priority=0, actions=CONTROLLER:65535" -O Openflow13


    curl -X POST -d '{"port_name": "rsu3-eth2", "type": "linux-htb", "max_rate": "6000000", "queues": [{"max_rate": "500000"}, {"min_rate": "500000"}, {"min_rate": "1000000"}]}' http://localhost:8080/qos/queue/0000000000000007



    =======================///////////////////////////////====================================

    QoS sem diffserv

    ap1

    ovs-vsctl set Bridge ap1 protocols=OpenFlow13; ovs-vsctl set-manager ptcp:6632

c0

    ryu-manager ryu.app.rest_qos ryu.app.qos_simple_switch_13 ryu.app.rest_conf_switch

    curl -X PUT -d '"tcp:127.0.0.1:6632"' http://localhost:8080/v1.0/conf/switches/0000000000000010/ovsdb_addr

    curl -X POST -d '{"type": "linux-htb", "max_rate": "1000000", "queues": [{"max_rate": "500000"}, {"min_rate": "800000"}]}' http://localhost:8080/qos/queue/0000000000000010
    curl -X POST -d '{"match": {"nw_dst": "10.0.0.12", "nw_proto": "UDP", "tp_dst": "5002"}, "actions":{"queue": "1"}}' http://localhost:8080/qos/rules/0000000000000010

   
    curl -X POST -d '{"match": {"nw_proto": "UDP", "tp_dst": "5003"}, "actions":{"queue": "1"}}' http://localhost:8080/qos/rules/0000000000000010

    curl -X POST -d '{"match": {"nw_dst": "10.0.0.1", "nw_proto": "UDP", "tp_dst": "5002"}, "actions":{"queue": "1"}}' http://localhost:8080/qos/rules/0000000000000001

    curl -X POST -d '{"match": {"nw_dst": "10.0.0.13", "nw_proto": "UDP", "tp_dst": "5003"}, "actions":{"queue": "1"}}' http://localhost:8080/qos/rules/0000000000000010

curl -X POST -d '{"match": {"nw_dst": "200.0.10.3", "nw_proto": "ICMP"}, "actions":{"queue": "2"}}' http://localhost:8080/qos/rules/0000000000000006




curl -X POST -d '{"port_name": "rsu3-eth3", "type": "linux-htb", "max_rate": "6000000", "queues": [{"max_rate": "500000"}, {"min_rate": "0"}, {"min_rate": "500000"}, {"min_rate": "1000000"}]}' http://localhost:8080/qos/queue/0000000000000006


curl -X POST -d '{"port_name": "rsu3-eth3", "type": "linux-htb", "max_rate": "6000000", "queues": [{"max_rate": "500000"}, {"min_rate": "500000"}, {"min_rate": "1000000"}]}' http://localhost:8080/qos/queue/0000000000000006



curl -X POST -d '{"match": {"nw_dst": "200.0.10.2", "nw_proto": "UDP", "tp_dst": "5002"}, "actions":{"queue": "1"}}' http://localhost:8080/qos/rules/0000000000000006; curl -X POST -d '{"match": {"nw_dst": "200.0.10.3", "nw_proto": "UDP", "tp_dst": "5003"}, "actions":{"queue": "2"}}' http://localhost:8080/qos/rules/0000000000000006; curl -X POST -d '{"match": {"nw_dst": "200.0.10.4", "nw_proto": "UDP", "tp_dst": "5004"}, "actions":{"queue": "3"}}' http://localhost:8080/qos/rules/0000000000000006


curl -X GET http://localhost:8080/stats/switches
curl -X GET http://localhost:8080/qos/queue/all
curl -X GET http://localhost:8080/qos/queue/status/all

curl -X GET http://localhost:8080/stats/switches
curl -X GET http://localhost:8080/qos/queue/0000000000000010
curl -X GET http://localhost:8080/qos/queue/status/0000000000000010
curl -X GET http://localhost:8080/qos/rules/0000000000000010




ovs-ofctl -O Openflow13 dump-flows s1
ovs-vsctl list Qos
ovs-vsctl list Queue
ovs-vsctl list Port
ovs-vsctl show
ovs-vsctl --all destroy QoS
ovs-vsctl --all destroy Queue


======================================//===========================================================

while true; do echo RSU1; hostapd_cli -i rsu1-wlan1 all_sta | grep :; echo RSU2; hostapd_cli -i rsu2-wlan1 all_sta | grep :; echo RSU3; hostapd_cli -i rsu3-wlan1 all_sta | grep :; sleep 1; done


awk '/IP/ {x = NR} END {print "Throughput = " NR *1498 }' mininet-wifi/server.txt 
awk '/IP/ {print $2, $9}' mininet-wifi/server.txt


x=0;while true; do a1=$(awk '/IP/ {print $1,  $2}' temp.txt | head -1 | cut -d'.' -f1 | cut -d':' -f3); a2=$(awk '/IP/ {print $1,  $2}' temp.txt | head -1 | cut -d'.' -f2); b1=$(awk '/IP/ {print $1,  $2}' temp.txt | head -$x | tail -1| cut -d'.' -f1 | cut -d':' -f3); b2=$(awk '/IP/ {print $1,  $2}' temp.txt | head -$x | tail -1| cut -d'.' -f2); echo "scale=6; $b1 - $a1 + $b2/1000000 - $a2/1000000" | bc; x=$((x+1)); sleep .1; done


 x=2;while true; do a1=$(awk '/IP/ {print $1,  $2}' temp.txt | head -1 | cut -d'.' -f1 | cut -d':' -f3); a2=$(awk '/IP/ {print $1,  $2}' temp.txt | head -1 | cut -d'.' -f2); b1=$(awk '/IP/ {print $1,  $2}' temp.txt | head -$x | tail -1| cut -d'.' -f1 | cut -d':' -f3); b2=$(awk '/IP/ {print $1,  $2}' temp.txt | head -$x | tail -1| cut -d'.' -f2); r1=$(echo "scale=6; $b1 - $a1 + $b2/1000000 - $a2/1000000" | bc); echo $r1; x=$((x+1)); sleep .1; done | head -100


 cat server.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > servert.txt; cat servert.txt | cut -d'.' -f2 > z.txt; cat servert.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | bc > x.txt; cat servert.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt; cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > servertf.txt


 cat car.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 > cart.txt; cat cart.txt | cut -d'.' -f2 > z.txt; cat cart.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | bc > x.txt; cat cart.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt; cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > cartf.txt

 cat car.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > cart.txt; cat cart.txt | cut -d'.' -f2 > z.txt; cat cart.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | bc > x.txt; cat cart.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt; cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > cartf.txt

 cat ping.txt |grep ms | cut -d'=' -f4 | grep -v % | cut -d' ' -f1 > delay.txt


iptables -D OUTPUT 1
iptables -I OUTPUT -p icmp --icmp-type destination-unreachable -j DROP




==========================================//===========//===============

cat car.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f3 > cart.txt



tracecar<-read.table(file = 'mininet-wifi/cartf.txt')
traceserver<-read.table(file = 'mininet-wifi/servertf.txt')
names(traceserver)<-c("time", "id", "size")
names(tracecar)<-c("time", "id", "size")
options(digits.secs = 6)
traceserver$time <- as.POSIXlt(traceserver$time, origin = "1987-10-05 11:00:00")
tracecar$time <- as.POSIXlt(tracecar$time, origin = "1987-10-05 11:00:00")
tracecar$size<- tracecar$size*8
traceserver$size<- traceserver$size*8
taxabps1segcar<-aggregate(list(size = tracecar$size), list(segundos = cut(tracecar$time, "1 sec")), sum)
taxabps1segserver<-aggregate(list(size = traceserver$size), list(segundos = cut(traceserver$time, "1 sec")), sum)
taxabps1segcarts<-ts(taxabps1segcar$size, frequency = 1)
taxabps1segserverts<-ts(taxabps1segserver$size, frequency = 1)
plot(taxabps1segcarts, main="Vehicle transmission (bits/s)", ylab='bits/s', xlab='segundos', col="blue")
lines(taxabps1segserverts, main="Server reception (bits/s)", ylab='bits/s', xlab='segundos', col="red")
legend(50, 9.6e+06, legend=c("Car trans", "Server recep"), col=c("blue", "red"), lty=1:2, cex=0.8)


===========================================///=========================================///============================================

http://localhost:8080/stats/flow/6
http://localhost:8080/stats/desc/6
http://localhost:8080/stats/portdesc/6
http://localhost:8080/stats/portdesc/3
http://localhost:8080/stats/portdesc/2
http://localhost:8080/stats/qos/6
http://localhost:8080/stats/queue/6
http://localhost:8080/stats/port/6
http://localhost:8080/stats/table/6
http://localhost:8080/stats/aggregateflow/6
https://www.google.com/search?client=ubuntu&channel=fs&q=curl+-X+GET+http%3A%2F%2Flocalhost%3A8080%2Fstats%2Fportdesc%2F6&ie=utf-8&oe=utf-8
http://localhost:8080/stats/portdesc/9
http://localhost:8080/stats/portdesc/8
http://localhost:8080/stats/portdesc/7
http://localhost:8080/stats/switches
http://localhost:8080/stats/portdesc/3458764513820540928
http://localhost:8080/stats/portdesc/2305843009213693952
http://localhost:8080/stats/portdesc/1152921504606846976
http://localhost:8080/stats/portdesc/4611686018427387904
http://localhost:8080/stats/portdesc/1152921504606847000
http://localhost:8080/stats/portdesc/55829499266116
http://localhost:8080/stats/portdesc/3458764513820541000
http://localhost:8080/stats/portdesc/1
http://localhost:8080/stats/queue/2
http://localhost:8080/stats/queue/1
http://localhost:8080/stats/portdesc/4000000000000000
http://localhost:8080/stats/port/2
http://localhost:8080/stats/port/1
http://localhost:8080/stats/port/55829499266116
http://localhost:8080/stats/table/55829499266116
http://localhost:8080/stats/aggregateflow/55829499266116
http://localhost:8080/stats/aggregateflow/3
http://localhost:8080/stats/aggregateflow/2
http://localhost:8080/stats/aggregateflow/1
http://localhost:8080/stats/agregateflow/1
http://localhost:8080/stats/flow/3458764513820541000
http://localhost:8080/stats/flow/4611686018427388000
http://localhost:8080/stats/flow/1152921504606847000
http://localhost:8080/stats/flow/2305843009213694000
http://localhost:8080/stats/flow/55829499266116
http://localhost:8080/stats/flow/1
http://localhost:8080/stats/flow/3
http://localhost:8080/stats/flow/2
http://localhost:8080/stats/desc/3458764513820541000
http://localhost:8080/stats/desc/5
http://localhost:8080/stats/desc/2
http://localhost:8080/stats/desc/2305843009213694000
http://localhost:8080/stats/desc/4000000000000000
http://localhost:8080/
http://localhost:8080/qos/meter/4000000000000000
http://localhost:8080/qos/rules/0000000000000002
http://localhost:8080/qos/rules/0000000000000001

# os.system('curl -X POST -d \'{"port_name": "rsu2-eth2", "type": "linux-htb", "max_rate": "8300000", "queues": [{"max_rate": "1000000"}, {"min_rate": "400000"}]}\' http://localhost:8080/qos/queue/0000000000000007')
    # os.system('curl -X POST -d \'{"port_name": "rsu1-eth2", "type": "linux-htb", "max_rate": "8300000", "queues": [{"max_rate": "1000000"}, {"min_rate": "400000"}]}\' http://localhost:8080/qos/queue/0000000000000006')
    # os.system('curl -X POST -d \'{"match": {"nw_dst": "200.0.10.2", "nw_proto": "UDP", "tp_dst": "5002"}, "actions":{"queue": "1"}}\' http://localhost:8080/qos/rules/0000000000000007')
    # os.system('curl -X POST -d \'{"match": {"nw_dst": "200.0.10.2", "nw_proto": "UDP", "tp_dst": "5002"}, "actions":{"queue": "1"}}\' http://localhost:8080/qos/rules/0000000000000006')  

    curl -X GET http://localhost:8080/stats/switches
curl -X GET http://localhost:8080/qos/queue/all
curl -X GET http://localhost:8080/qos/queue/status/all

curl -X GET http://localhost:8080/stats/switches
curl -X GET http://localhost:8080/qos/queue/0000000000000010
curl -X GET http://localhost:8080/qos/queue/status/0000000000000010
curl -X GET http://localhost:8080/qos/rules/0000000000000010

    ovs-vsctl clear Port rsu1-eth2 qos; ovs-vsctl clear Port rsu2-eth2 qos; ovs-vsctl --all destroy QoS; ovs-vsctl --all destroy Queue; curl -X DELETE -d '{"qos_id":"all"}' http://localhost:8080/qos/rules/0000000000000006; curl -X DELETE -d '{"qos_id":"all"}' http://localhost:8080/qos/rules/0000000000000007



    iperf -s -u -i 1 -p 5002

    iperf -c 10.0.0.13 -p 5002 -u -b 1M -t5

    ovs-ofctl del-flows ap1; ovs-ofctl add-flow ap1 "table=0, priority=0, actions=goto_table:1" -O Openflow13; ovs-ofctl add-flow ap1 "table=1, priority=0, actions=CONTROLLER:65535" -O Openflow13


ovs-ofctl -O Openflow13 dump-flows s1
ovs-vsctl list Qos
ovs-vsctl list Queue
ovs-vsctl list Port
ovs-vsctl show
ovs-vsctl --all destroy QoS
ovs-vsctl --all destroy Queue

==============================================///========================================///=====================================

CREATE DATABASE framework;
USE framework;
CREATE TABLE appkpi (id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, application VARCHAR(20), e2e_latency FLOAT(7), reliability FLOAT(7), data_rate FLOAT(7), protocol VARCHAR(5), port INT(11));
CREATE TABLE infrastructure (ip VARCHAR (40) NOT NULL PRIMARY KEY, app INT(11));
ALTER TABLE infrastructure ADD CONSTRAINT app FOREIGN KEY (app) REFERENCES appkpi (id);
CREATE TABLE rsu (dpid INT (11) NOT NULL PRIMARY KEY, Region INT(11), limite FLOAT, iface_updtip VARCHAR (10));
CREATE TABLE vehicle (mac VARCHAR(20) NOT NULL, app_id INT(11), region INT(11));
ALTER TABLE vehicle ADD CONSTRAINT fk_app FOREIGN KEY (app_id) REFERENCES appkpi (id);


INSERT INTO `appkpi` (`id`, `application`, `e2e_latency`, `reliability`, `data_rate`, `protocol`, `port`) VALUES (NULL, "CCAS", 50, 0.00001, 500000, "UDP", 5002);
INSERT INTO `appkpi` (`id`, `application`, `e2e_latency`, `reliability`, `data_rate`, `protocol`, `port`) VALUES (NULL, "INS", 3000, 0.00001, 1000000, "UDP", 5003);
INSERT INTO `appkpi` (`id`, `application`, `e2e_latency`, `reliability`, `data_rate`, `protocol`, `port`) VALUES (NULL, "4KLV", NULL, 0.00001, 3000000, "UDP", 5004);

INSERT INTO `infrastructure` (`ip`, `app`) VALUES ("200.0.10.2", 1);
INSERT INTO `infrastructure` (`ip`, `app`) VALUES ("200.0.10.3", 2);
INSERT INTO `infrastructure` (`ip`, `app`) VALUES ("200.0.10.4", 3);

INSERT INTO `rsu` (`dpid`, `region`, `limite`, `iface_pddt`) VALUES (6, 1, 10, "rsu1-eth2");
INSERT INTO `rsu` (`dpid`, `region`, `limite`, `iface_pddt`) VALUES (7, 1, 10, "rsu2-eth2");

INSERT INTO `vehicle` (`mac`, `app_id`, `region`) VALUES ("00:00:00:00:00:01", 1, 1);
INSERT INTO `vehicle` (`mac`, `app_id`, `region`) VALUES ("00:00:00:00:00:02", 1, 1);
INSERT INTO `vehicle` (`mac`, `app_id`, `region`) VALUES ("00:00:00:00:00:03", 1, 1);
INSERT INTO `vehicle` (`mac`, `app_id`, `region`) VALUES ("00:00:00:00:00:01", 2, 1);
INSERT INTO `vehicle` (`mac`, `app_id`, `region`) VALUES ("00:00:00:00:00:02", 2, 1);
INSERT INTO `vehicle` (`mac`, `app_id`, `region`) VALUES ("00:00:00:00:00:03", 2, 1);
INSERT INTO `vehicle` (`mac`, `app_id`, `region`) VALUES ("00:00:00:00:00:01", 3, 1);
INSERT INTO `vehicle` (`mac`, `app_id`, `region`) VALUES ("00:00:00:00:00:02", 3, 1);
INSERT INTO `vehicle` (`mac`, `app_id`, `region`) VALUES ("00:00:00:00:00:03", 3, 1);

select * from appkpi where id IN (select app_id from vehicle where mac = "00:00:00:00:00:01")

mysql -u root -p$pass -e "select sum(data_rate) from appkpi where id IN (select app_id from vehicle where mac = \"00:00:00:00:00:01\")" framework

x=$(mysql -u root -p$pass -e "select sum(data_rate) from appkpi where id IN (select app_id from vehicle where mac = \"00:00:00:00:00:03\")" framework | tail -1)

mysql -u root -p$pass -e "select appkpi.e2e_latency, appkpi.data_rate, infrastructure.ip from appkpi inner join infrastructure on appkpi.id = infrastructure.app;" framework


//Define e aplica filas nos switches e respectivas portas
rm -f temp2.txt; mysql -u root -p$pass -e "select dpid,iface_updt from rsu where Region IN (select region from appkpi)" framework | grep '-' |while read i; do echo $i >> temp2.txt; done; t2=0; b2=$(cat temp2.txt | awk -F' ' '{print $1}'); for i in $b2; do t2=$(echo $t2+1 | bc); x2=$(cat temp2.txt | awk -F' ' '{print $1}' | cut -d$'\n' -f$t2); y2=$(cat temp2.txt | awk -F' ' '{print $2}' | cut -d$'\n' -f$t2); x=$(mysql -u root -p$pass -e "select appkpi.data_rate, infrastructure.ip from appkpi inner join infrastructure on appkpi.id = infrastructure.app;" framework | grep '\.' |while read i; do echo $i | awk -F' ' '{print $1}'; done); h=$(for i in $x; do echo {\"min_rate\": "\"$(echo $i)\""},; done | paste -s | cut -d',' -f1,2,3); j=$(echo curl -X POST -d "'{\"port_name\": \"$y2\", \"type\": \"linux-htb\", \"max_rate\": \"8300000\", \"queues\": [{\"max_rate\": \"1000000\"}, $(echo $h)]}'" http://localhost:8080/qos/queue/000000000000000$x2); /bin/sh -c "$j"; done


//Associa tráfego as filas e aplica nos switches
rm -f temp2.txt; mysql -u root -p$pass -e "select dpid,iface_updt from rsu where Region IN (select region from appkpi)" framework | grep '-' |while read i; do echo $i >> temp2.txt; done; t2=0; b2=$(cat temp2.txt | awk -F' ' '{print $1}'); for i in $b2; do t2=$(echo $t2+1 | bc); x2=$(cat temp2.txt | awk -F' ' '{print $1}' | cut -d$'\n' -f$t2);  rm -f temp.txt; mysql -u root -p$pass -e "select infrastructure.ip, appkpi.port from appkpi inner join infrastructure on appkpi.id = infrastructure.app;" framework | grep '\.' |while read i; do echo $i >> temp.txt; done; t=0; b=$(cat temp.txt | awk -F' ' '{print $1}'); for i in $b; do t=$(echo $t+1 | bc); x=$(cat temp.txt | awk -F' ' '{print $1}' | cut -d$'\n' -f$t); y=$(cat temp.txt | awk -F' ' '{print $2}' | cut -d$'\n' -f$t); curl -X POST -d '{"match": {"nw_dst": "'$x'", "nw_proto": "UDP", "tp_dst": "'$y'"}, "actions":{"queue": "'$t'"}}' http://localhost:8080/qos/rules/000000000000000$x2; done; done


======================//=============================================================================================================


curl -X POST -d '{"port_name": "rsu2-eth2", "type": "linux-htb", "max_rate": "8300000", "queues": [{"max_rate": "1000000"}, {"min_rate": "400000"}]}' http://localhost:8080/qos/queue/0000000000000007

curl -X POST -d '{"port_name": "rsu1-eth2", "type": "linux-htb", "max_rate": "8300000", "queues": [{"max_rate": "1000000"}, {"min_rate": "400000"}]}' http://localhost:8080/qos/queue/0000000000000006

curl -X POST -d '{"match": {"nw_dst": "200.0.10.2", "nw_proto": "UDP", "tp_dst": "5002"}, "actions":{"queue": "1"}}' http://localhost:8080/qos/rules/0000000000000007
curl -X POST -d '{"match": {"nw_dst": "200.0.10.2", "nw_proto": "UDP", "tp_dst": "5002"}, "actions":{"queue": "1"}}' http://localhost:8080/qos/rules/0000000000000006


curl -X POST -d '{"match": {"nw_proto": "ICMP"}, "actions":{"queue": "1"}}' http://localhost:8080/qos/rules/0000000000000006; curl -X POST -d '{"match": {"nw_proto": "ICMP"}, "actions":{"queue": "1"}}' http://localhost:8080/qos/rules/0000000000000007

#Para limpar as configurações de QoS
ovs-vsctl clear Port rsu1-eth2 qos; ovs-vsctl clear Port rsu2-eth2 qos; ovs-vsctl --all destroy QoS; ovs-vsctl --all destroy Queue; curl -X DELETE -d '{"qos_id":"all"}' http://localhost:8080/qos/rules/0000000000000006; curl -X DELETE -d '{"qos_id":"all"}' http://localhost:8080/qos/rules/0000000000000007; curl -X DELETE -d '{"qos_id":"all"}' http://localhost:8080/qos/queue/0000000000000007; curl -X DELETE -d '{"qos_id":"all"}' http://localhost:8080/qos/queue/0000000000000006

======================//=============================================================================================================


#para dropar pacotes entre RSUs vizinhas e evitar loop via REST
curl -X POST -d '{ "dpid": 6, "cookie": 0, "cookie_mask": 1, "table_id": 1, "priority": 1, "flags": 2, "match":{ "in_port":2}, "actions":[{ "type":"CLEAR_ACTIONS"}]}' http://localhost:8080/stats/flowentry/add
curl -X POST -d '{ "dpid": 7, "cookie": 0, "cookie_mask": 1, "table_id": 1, "priority": 1, "flags": 2, "match":{ "in_port":2}, "actions":[{ "type":"CLEAR_ACTIONS"}]}' http://localhost:8080/stats/flowentry/add

#Quando for redirecionar. Deletar entrada na rsu local, na remota e no switch backbone via REST
curl -X POST -d '{"dpid": 7, "cookie": 0, "cookie_mask": 1, "table_id": 1, "priority": 1, "flags": 1, "match":{ "dl_src": "00:00:00:00:00:01" }}' http://localhost:8080/stats/flowentry/delete
curl -X POST -d '{"dpid": 7, "cookie": 0, "cookie_mask": 1, "table_id": 1, "priority": 1, "flags": 1, "match":{ "dl_dst": "00:00:00:00:00:01" }}' http://localhost:8080/stats/flowentry/delete
curl -X POST -d '{"dpid": 9, "cookie": 0, "cookie_mask": 1, "table_id": 1, "priority": 1, "flags": 1, "match":{ "dl_src": "00:00:00:00:00:01" }}' http://localhost:8080/stats/flowentry/delete
curl -X POST -d '{"dpid": 9, "cookie": 0, "cookie_mask": 1, "table_id": 1, "priority": 1, "flags": 1, "match":{ "dl_dst": "00:00:00:00:00:01" }}' http://localhost:8080/stats/flowentry/delete

#Quando for redirecionar. Adicionar entradas via REST
curl -X POST -d '{"dpid": 7, "cookie": 0, "cookie_mask": 1, "table_id": 1, "priority": 2, "flags": 1, "match":{ "dl_src": "00:00:00:00:00:01" }, "actions":[{ "type":"OUTPUT", "port": 2}]}' http://localhost:8080/stats/flowentry/add
curl -X POST -d '{"dpid": 7, "cookie": 0, "cookie_mask": 1, "table_id": 1, "priority": 2, "flags": 1, "match":{ "dl_dst": "00:00:00:00:00:01" }, "actions":[{ "type":"OUTPUT", "port": 1}]}' http://localhost:8080/stats/flowentry/add
curl -X POST -d '{"dpid": 6, "cookie": 0, "cookie_mask": 1, "table_id": 1, "priority": 2, "flags": 1, "match":{ "dl_src": "00:00:00:00:00:01" }, "actions":[{ "type":"OUTPUT", "port": 3}]}' http://localhost:8080/stats/flowentry/add
curl -X POST -d '{"dpid": 6, "cookie": 0, "cookie_mask": 1, "table_id": 1, "priority": 2, "flags": 1, "match":{ "dl_dst": "00:00:00:00:00:01" }, "actions":[{ "type":"OUTPUT", "port": 2}]}' http://localhost:8080/stats/flowentry/add

======================//=============================================================================================================

#limpa todos flows e cria table miss entry
ovs-ofctl del-flows rsu1 -O Openflow13; ovs-ofctl add-flow rsu1 "table=0, priority=0, actions=goto_table:1" -O Openflow13; ovs-ofctl add-flow rsu1 "table=1, priority=0, actions=CONTROLLER:65535" -O Openflow13

#adiciona flows
ovs-ofctl add-flow rsu2 "table=1, priority=0, in_port=1, actions=4" -O Openflow13
ovs-ofctl add-flow rsu2 "table=1, priority=0, in_port=4, actions=1" -O Openflow13
ovs-ofctl add-flow sw1 "table=1, priority=1, cookie=0x20, in_port=2,dl_src=00:00:00:00:00:01 actions=1" -O Openflow13

#deleta flows
ovs-ofctl del-flows sw1 "dl_src=00:00:00:00:00:01" -O Openflow13
ovs-ofctl del-flows sw1 "dl_dst=00:00:00:00:00:01" -O Openflow13

#deleta flow por cookie
ovs-ofctl del-flows sw1 cookie=0x20/-1 -O Openflow13
ovs-ofctl del-flows sw1 cookie=0x20/-1,dl_dst=00:00:00:00:00:01 -O Openflow13

#Flow para dropar pacote
ovs-ofctl add-flow rsu2 "table=1, priority=2, cookie=0x15, in_port=1,dl_src=00:00:00:00:00:01 actions=drop" -O Openflow13


#para inicio
ovs-ofctl del-flows sw1 -O Openflow13; ovs-ofctl add-flow sw1 "table=0, priority=0, actions=goto_table:1" -O Openflow13; ovs-ofctl del-flows sw2 -O Openflow13; ovs-ofctl add-flow sw2 "table=0, priority=0, actions=goto_table:1" -O Openflow13; ovs-ofctl add-flow sw2 "table=1, priority=0, actions=CONTROLLER:65535" -O Openflow13; ovs-ofctl add-flow sw2 "table=1, priority=0, in_port=1 actions=4" -O Openflow13; ovs-ofctl add-flow sw2 "table=1, priority=0, in_port=2 actions=4" -O Openflow13; ovs-ofctl add-flow sw2 "table=1, priority=0, in_port=3 actions=4" -O Openflow13; ovs-ofctl del-flows rsu1 -O Openflow13; ovs-ofctl del-flows rsu2 -O Openflow13; ovs-ofctl del-flows rsu3 -O Openflow13; ovs-ofctl add-flow rsu1 "table=0, priority=0, actions=goto_table:1" -O Openflow13; ovs-ofctl add-flow rsu2 "table=0, priority=0, actions=goto_table:1" -O Openflow13; ovs-ofctl add-flow rsu3 "table=0, priority=0, actions=goto_table:1" -O Openflow13; ovs-ofctl add-flow rsu1 "table=1, priority=0, in_port=1, actions=3" -O Openflow13; ovs-ofctl add-flow rsu1 "table=1, priority=0, in_port=3, actions=1" -O Openflow13; ovs-ofctl add-flow rsu2 "table=1, priority=0, in_port=1, actions=4" -O Openflow13; ovs-ofctl add-flow rsu2 "table=1, priority=0, in_port=4, actions=1" -O Openflow13; ovs-ofctl add-flow rsu3 "table=1, priority=0, in_port=1, actions=3" -O Openflow13; ovs-ofctl add-flow rsu3 "table=1, priority=0, in_port=3, actions=1" -O Openflow13; ovs-ofctl add-flow rsu3 "table=1, priority=1, cookie=0x28, in_port=1, nw_dst=200.0.10.2,icmp actions=5" -O Openflow13; ovs-ofctl add-flow rsu3 "table=1, priority=1, cookie=0x28,in_port=5, actions=1" -O Openflow13; ovs-ofctl add-flow rsu3 "table=1, priority=1, cookie=0x28, in_port=1, arp actions=3,5" -O Openflow13; ovs-ofctl add-flow rsu2 "table=1, priority=1, cookie=0x28, in_port=1, nw_dst=200.0.10.2,icmp actions=5" -O Openflow13; ovs-ofctl add-flow rsu2 "table=1, priority=1, cookie=0x28,in_port=5, actions=1" -O Openflow13; ovs-ofctl add-flow rsu2 "table=1, priority=1, cookie=0x28, in_port=1, arp actions=4,5" -O Openflow13; ovs-ofctl add-flow rsu1 "table=1, priority=1, cookie=0x28, in_port=1, nw_dst=200.0.10.2,icmp actions=5" -O Openflow13; ovs-ofctl add-flow rsu1 "table=1, priority=1, cookie=0x28,in_port=5, actions=1" -O Openflow13; ovs-ofctl add-flow rsu1 "table=1, priority=1, cookie=0x28, in_port=1, arp actions=3,5" -O Openflow13; ovs-ofctl add-flow rsu1 "table=1, priority=1, cookie=0x28, in_port=1, nw_dst=200.0.10.2,udp,tp_dst=5002 actions=5" -O Openflow13; ovs-ofctl add-flow rsu2 "table=1, priority=1, cookie=0x28, in_port=1, nw_dst=200.0.10.2,udp,tp_dst=5002 actions=5" -O Openflow13; ovs-ofctl add-flow rsu3 "table=1, priority=1, cookie=0x28, in_port=1, nw_dst=200.0.10.2,udp,tp_dst=5002 actions=5" -O Openflow13; mysql -u root -pwifi -e "delete from redirect;" framework 2> /dev/null


ovs-ofctl del-flows sw3 -O Openflow13; ovs-ofctl add-flow sw3 "table=0, priority=0, actions=goto_table:1" -O Openflow13; ovs-ofctl add-flow sw3 "table=1, priority=0, in_port=3 actions=1" -O Openflow13; ovs-ofctl add-flow sw2 "table=1, priority=0, in_port=1 actions=3" -O Openflow13; ovs-ofctl del-flows sw4 -O Openflow13; ovs-ofctl add-flow sw4 "table=0, priority=0, actions=goto_table:1" -O Openflow13; ovs-ofctl add-flow sw4 "table=1, priority=0, in_port=2 actions=4" -O Openflow13; ovs-ofctl add-flow sw4 "table=1, priority=0, in_port=4 actions=2" -O Openflow13; ovs-ofctl del-flows sw5 -O Openflow13; ovs-ofctl add-flow sw5 "table=0, priority=0, actions=goto_table:1" -O Openflow13; ovs-ofctl add-flow sw5 "table=1, priority=0, in_port=3 actions=5" -O Openflow13; ovs-ofctl add-flow sw5 "table=1, priority=0, in_port=5 actions=3" -O Openflow13; 


Redirecionando.

1 - insere flows na rsu origem de maior prioridade. ovs-ofctl add-flow rsu2 "table=1, priority=1, cookie=0x10, in_port=1,dl_src=00:00:00:00:00:01 actions=2" -O Openflow13; ovs-ofctl add-flow rsu2 "table=1, priority=1, cookie=0x10 ,dl_dst=00:00:00:00:00:01 actions=1" -O Openflow13
ovs-ofctl add-flow rsu2 "table=1, priority=1, cookie=0x10, in_port=1, dl_src=00:00:00:00:00:01, nw_dst=200.0.10.2, udp,tp_dst=5002 actions=2" -O Openflow13; ovs-ofctl add-flow rsu2 "table=1, priority=1, cookie=0x10, dl_dst=00:00:00:00:00:01 actions=1" -O Openflow13

2 - deleta flows na rsu origem para evitar confusão. ovs-ofctl del-flows rsu2 cookie=0x0/-1,dl_src=00:00:00:00:00:01 -O Openflow13;ovs-ofctl del-flows rsu2 cookie=0x0/-1,dl_dst=00:00:00:00:00:01 -O Openflow13. (ignorar)

3 - insere flows na rsu de redirecionamento. ovs-ofctl add-flow rsu1 "table=1, priority=2, cookie=0x0 ,in_port=2,dl_src=00:00:00:00:00:01 actions=3" -O Openflow13; ovs-ofctl add-flow rsu1 "table=1, priority=2, cookie=0x0, in_port=3,dl_dst=00:00:00:00:00:01 actions=2" -O Openflow13
ovs-ofctl add-flow rsu1 "table=1, priority=2, cookie=0x0 ,in_port=2,dl_src=00:00:00:00:00:01, nw_dst=200.0.10.2, udp,tp_dst=5002 actions=3" -O Openflow13; ovs-ofctl add-flow rsu1 "table=1, priority=2, cookie=0x0, in_port=3,dl_dst=00:00:00:00:00:01 actions=2" -O Openflow13

4 - insere flows de maior prioridade no backbone. ovs-ofctl add-flow sw1 "table=1, priority=2, cookie=0x20, in_port=2,dl_src=00:00:00:00:00:01 actions=1" -O Openflow13; ovs-ofctl add-flow sw1 "table=1, priority=2, cookie=0x20, in_port=1,dl_dst=00:00:00:00:00:01 actions=2" -O Openflow13
ovs-ofctl add-flow sw1 "table=1, priority=2, cookie=0x20, in_port=2,dl_src=00:00:00:00:00:01, nw_dst=200.0.10.2, udp,tp_dst=5002 actions=1" -O Openflow13; ovs-ofctl add-flow sw1 "table=1, priority=2, cookie=0x20, in_port=1,dl_dst=00:00:00:00:00:01, udp,tp_src=5002 actions=2" -O Openflow13

5 - deleta flows no backbone para evitar confusão. ovs-ofctl del-flows sw1 cookie=0x0/-1,dl_src=00:00:00:00:00:01 -O Openflow13; ovs-ofctl del-flows sw1 cookie=0x0/-1,dl_src=00:00:00:00:00:01 -O Openflow13

time, id size, ori dest
=========================================//==========================================================//=================================//======================================

cat server_e.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > servert.txt; cat servert.txt | cut -d'.' -f2 > z.txt; cat servert.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/' | bc > x.txt; cat servert.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > servertf.txt; cat server_e.txt | grep 5003 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat server_e.txt | grep 5003 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste servertf.txt ipo.txt ipd.txt| expand | tr -s ' ' > server_etf.txt;  for i in {10..29}; do cat server_etf.txt | grep 200.0.10.1$i > server_etf_car$(echo $i-10|bc).txt; done


cat server_e2.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > servert.txt; cat servert.txt | cut -d'.' -f2 > z.txt; cat servert.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/' | bc > x.txt; cat servert.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > servertf.txt; cat server_e2.txt | grep 5004 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat server_e2.txt | grep 5004 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste servertf.txt ipo.txt ipd.txt| expand | tr -s ' ' > server_e2tf.txt;  for i in {10..29}; do cat server_e2tf.txt | grep 200.0.10.1$i > server_e2tf_car$(echo $i-10|bc).txt; done

cat server_g.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > servert.txt; cat servert.txt | cut -d'.' -f2 > z.txt; cat servert.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/' | bc > x.txt; cat servert.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > servertf.txt; cat server_g.txt | grep 5005 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat server_g.txt | grep 5005 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste servertf.txt ipo.txt ipd.txt| expand | tr -s ' ' > server_gtf.txt;  for i in {10..29}; do cat server_gtf.txt | grep 200.0.10.1$i > server_gtf_car$(echo $i-10|bc).txt; done

cat server_s1.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > servert.txt; cat servert.txt | cut -d'.' -f2 > z.txt; cat servert.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/' | bc > x.txt; cat servert.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > servertf.txt; cat server_s1.txt | grep 5002 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat server_s1.txt | grep 5002 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste servertf.txt ipo.txt ipd.txt| expand | tr -s ' ' > server_s1tf.txt;  for i in {23..29}; do cat server_s1tf.txt | grep 200.0.10.1$i > server_s1tf_car$(echo $i-10|bc).txt; done

cat server_s2.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > servert.txt; cat servert.txt | cut -d'.' -f2 > z.txt; cat servert.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/' | bc > x.txt; cat servert.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > servertf.txt; cat server_s2.txt | grep 5002 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat server_s2.txt | grep 5002 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste servertf.txt ipo.txt ipd.txt| expand | tr -s ' ' > server_s2tf.txt;  for i in {17..22}; do cat server_s2tf.txt | grep 200.0.10.1$i > server_s2tf_car$(echo $i-10|bc).txt; done

cat server_s3.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > servert.txt; cat servert.txt | cut -d'.' -f2 > z.txt; cat servert.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/' | bc > x.txt; cat servert.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > servertf.txt; cat server_s3.txt | grep 5002 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat server_s3.txt | grep 5002 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste servertf.txt ipo.txt ipd.txt| expand | tr -s ' ' > server_s3tf.txt;  for i in {10..16}; do cat server_s3tf.txt | grep 200.0.10.1$i > server_s3tf_car$(echo $i-10|bc).txt; done

for i in {0..19}; do cat car$i.txt | grep IP | grep -v ARP | grep -v ICMP| sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > cart.txt; cat cart.txt | cut -d'.' -f2 > z.txt; cat cart.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/' | bc > x.txt; cat cart.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > cartf.txt; echo $i; cat car$i.txt | grep '>' | grep -v ICMP | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat car$i.txt | grep '>' | grep -v ICMP | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste cartf.txt ipo.txt ipd.txt| expand | tr -s ' ' > car$(echo $i)tf.txt; done 


for i in $(ls car*tf.txt); do for j in {5002..5005}; do cat $i | grep "\.$j" | grep 1498 > $(echo $i | cut -d'.' -f1)_$j.txt; done; done

cat car2tf_5003.txt | cut -d' ' -f3 | grep -v 1498




=====================================================================//==================================================//==================================================================//=======================//=========
cat server_e.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > servert.txt; cat servert.txt | cut -d'.' -f2 > z.txt; cat servert.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/' | sed 's/04/4*60/' | sed 's/05/5*60/'| bc > x.txt; cat servert.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > servertf.txt; cat server_e.txt | grep 5003 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat server_e.txt | grep 5003 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste servertf.txt ipo.txt ipd.txt| expand | tr -s ' ' > server_etf.txt;  for i in {10..24}; do cat server_etf.txt | grep 200.0.10.1$i > server_etf_car$(echo $i-10|bc)_$1.txt; done; cat server_etf_car*_$1.txt | sort -n > result/server_etf_car_$1\_tt.txt

cat server_e2.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > servert.txt; cat servert.txt | cut -d'.' -f2 > z.txt; cat servert.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/' | sed 's/04/4*60/' | sed 's/05/5*60/'| bc > x.txt; cat servert.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > servertf.txt; cat server_e2.txt | grep 5004 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat server_e2.txt | grep 5004 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste servertf.txt ipo.txt ipd.txt| expand | tr -s ' ' > server_e2tf.txt;  for i in {10..24}; do cat server_e2tf.txt | grep 200.0.10.1$i > server_e2tf_car$(echo $i-10|bc)_$1.txt; done; cat server_e2tf_car*_$1.txt | sort -n > result/server_e2tf_car_$1\_tt.txt

cat server_g.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > servert.txt; cat servert.txt | cut -d'.' -f2 > z.txt; cat servert.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/' | sed 's/04/4*60/' | sed 's/05/5*60/'|  bc > x.txt; cat servert.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > servertf.txt; cat server_g.txt | grep 5005 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat server_g.txt | grep 5005 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste servertf.txt ipo.txt ipd.txt| expand | tr -s ' ' > server_gtf.txt;  for i in {10..24}; do cat server_gtf.txt | grep 200.0.10.1$i > server_gtf_car$(echo $i-10|bc)_$1.txt; done; cat server_gtf_car*_$1.txt | sort -n > result/server_gtf_car_$1\_tt.txt

cat server_s1.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > servert.txt; cat servert.txt | cut -d'.' -f2 > z.txt; cat servert.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/' | sed 's/04/4*60/' | sed 's/05/5*60/'| bc > x.txt; cat servert.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > servertf.txt; cat server_s1.txt | grep 5002 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat server_s1.txt | grep 5002 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste servertf.txt ipo.txt ipd.txt| expand | tr -s ' ' > server_s1tf.txt;  for i in {10..24}; do cat server_s1tf.txt | grep 200.0.10.1$i > server_s1tf_car$(echo $i-10|bc)_$1.txt; done

cat server_s2.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > servert.txt; cat servert.txt | cut -d'.' -f2 > z.txt; cat servert.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/' | sed 's/04/4*60/' | sed 's/05/5*60/'| bc > x.txt; cat servert.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > servertf.txt; cat server_s2.txt | grep 5002 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat server_s2.txt | grep 5002 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste servertf.txt ipo.txt ipd.txt| expand | tr -s ' ' > server_s2tf.txt;  for i in {10..24}; do cat server_s2tf.txt | grep 200.0.10.1$i > server_s2tf_car$(echo $i-10|bc)_$1.txt; done

cat server_s3.txt | grep IP | sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > servert.txt; cat servert.txt | cut -d'.' -f2 > z.txt; cat servert.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/'| sed 's/04/4*60/' | sed 's/05/5*60/'| bc > x.txt; cat servert.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > servertf.txt; cat server_s3.txt | grep 5002 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat server_s3.txt | grep 5002 | grep -v ttl | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste servertf.txt ipo.txt ipd.txt| expand | tr -s ' ' > server_s3tf.txt;  for i in {10..24}; do cat server_s3tf.txt | grep 200.0.10.1$i > server_s3tf_car$(echo $i-10|bc)_$1.txt; done

cat server_s?tf_car*_$1.txt | sort -n > result/server_stf_car_$1\_tt.txt

for i in {0..14}; do cat car$i.txt | grep IP | grep -v ARP | grep -v ICMP| sed 's/00:0/ 00:0/' | tr -s ' ' | cut -d' ' -f2,9,18 | cut -d')' -f1 | sed 's/,//'|cut -d':' -f2,3 | grep : > cart.txt; cat cart.txt | cut -d'.' -f2 > z.txt; cat cart.txt | cut -d':' -f1 | sed 's/00/0*60/' | sed 's/01/1*60/' | sed 's/02/2*60/' | sed 's/03/3*60/'| sed 's/04/4*60/' | sed 's/05/5*60/'| bc > x.txt; cat cart.txt | cut -d':' -f2 | cut -d'.' -f1 > y.txt; paste x.txt y.txt | expand | tr -s ' ' | tr ' ' '+' | bc > w.txt;  cat z.txt | tr ' ' 'x' >j.txt; paste w.txt j.txt | expand | tr -s ' ' | tr ' ' '.' | tr 'x' ' ' > cartf.txt; echo $i; cat car$i.txt | grep '>' | grep -v ICMP | tr -s ' ' | cut -d':' -f1 | cut -d'.' -f1-4 > ipo.txt; cat car$i.txt | grep '>' | grep -v ICMP | tr -s ' ' | cut -d':' -f1 | cut -d' ' -f4 > ipd.txt; paste cartf.txt ipo.txt ipd.txt| expand | tr -s ' ' > car$(echo $i)tf_$1.txt; done 

#for i in $(ls car{7..10}\tf_$1.txt); do  rm -f temp1.txt; rm -f temp2.txt; cp $i $i\.old; for j in $(cat $i | cut -d'.' -f1); do echo $j+150|bc >> temp1.txt; done; cat $i | cut -d'.' -f2-10 > temp2.txt; paste temp1.txt temp2.txt | expand | tr -s ' ' | sed 's/ /./' > $i; echo $i; done

#for i in $(ls car{11..14}\tf_$1.txt); do  rm -f temp1.txt; rm -f temp2.txt; cp $i $i\.old; for j in $(cat $i | cut -d'.' -f1); do echo $j+225|bc >> temp1.txt; done; cat $i | cut -d'.' -f2-10 > temp2.txt; paste temp1.txt temp2.txt | expand | tr -s ' ' | sed 's/ /./' > $i; echo $i; done

for i in $(ls car{7..14}\tf_$1.txt); do rm -f temp1.txt; rm -f temp2.txt; cp $i $i\.old; f=log$(echo $i | sed "s/tf_$1.txt//").txt; seg1=$(cat $f | grep ini | cut -d' ' -f2| cut -d'.' -f1); seg2=$(cat $f | grep transm | head -1 | cut -d' ' -f2| cut -d'.' -f1); k=$(($seg2 - $seg1)); for j in $(cat $i | cut -d'.' -f1); do echo $j+$k|bc >> temp1.txt; done; cat $i | cut -d'.' -f2-10 > temp2.txt; paste temp1.txt temp2.txt | expand | tr -s ' ' | sed 's/ /./' > $i; echo $i; done

for i in $(ls car*tf_$1.txt); do for j in {5002..5005}; do cat $i | grep "\.$j" | grep 1498 > $(echo $i | cut -d'.' -f1)_$j.txt; done; done

cat car*tf_$1\_5002.txt | sort -n > result/cartf_$1\_5002_tt.txt; cat car*tf_$1\_5003.txt | sort -n > result/cartf_$1\_5003_tt.txt; cat car*tf_$1\_5004.txt | sort -n > result/cartf_$1\_5004_tt.txt; cat car*tf_$1\_5005.txt | sort -n > result/cartf_$1\_5005_tt.txt

for i in $(ls ping*); do rm -f s.txt; x=$(cat ping0_s.txt | grep 'from' |cut -d' ' -f1 | head -1); for j in $(cat $i | grep 'from' |cut -d' ' -f1); do echo $x-$j | bc | sed 's/-//' >> s.txt; done; cat $i | grep 'from' | cut -d'=' -f4 | cut -d' ' -f1 > d.txt; paste s.txt d.txt | expand | tr -s ' ' > delay$(echo $i | cut -d'.' -f1 | sed 's/ping//')_$1.txt; done

cat delay*_g_$1.txt |sort -n > result/delay_g_$1\_tt.txt; cat delay*_e_$1.txt |sort -n > result/delay_e_$1\_tt.txt; cat delay*_e2_$1.txt |sort -n > result/delay_e2_$1\_tt.txt; cat delay*_s_$1.txt |sort -n > result/delay_s_$1\_tt.txt

for i in $(ls logcar*.txt); do seg1=$(cat $i | grep ini | cut -d' ' -f2| cut -d'.' -f1); seg2=$(cat $i | grep transm | head -1 | cut -d' ' -f2| cut -d'.' -f1); j=$(($seg2 - $seg1));echo $i $j; done | cut -d' ' -f2 | sort -n > result/temp_$1\_tt.txt

==================================================================
for i in $(ls logcar*.txt); do seg1=$(cat $i | grep ini | cut -d' ' -f2| cut -d'.' -f1); seg2=$(cat $i | grep transm | head -1 | cut -d' ' -f2| cut -d'.' -f1); j=$(($seg2 - $seg1));echo $i $j; done | cut -d' ' -f2 | sort -n

while true; do for i in $(ls -ltra logcar*.txt | cut -d' ' -f5 | sort -n); do if [[ $i -gt 31 ]]; then echo $i; fi; done | wc -l; sleep 3; done


=========================

echo 'interface=rsu3-wlan1\ndriver=nl80211\nssid=rsu3\nwds_sta=1\nhw_mode=g\nchannel=11\nctrl_interface=/var/run/hostapd\nctrl_interface_group=0'

































































